--[[
    init.lua
    Created: 04/12/2023 15:20:44
    Description: Autogenerated script file for the map large_lake.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local large_lake = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---large_lake.Init(map)
--Engine callback function
function large_lake.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()

end

---large_lake.Enter(map)
--Engine callback function
function large_lake.Enter(map)
  
  if SV.large_lake.ReturnVisit then
    large_lake.EmptyReturn()
  elseif SV.large_lake.BossComplete then
    large_lake.PostBattle()
  else
    large_lake.PreBattle()
  end
end

function large_lake.PreBattle()

  local player = CH("PLAYER")
  local enemy = CH("Croco")
  
  GAME:CutsceneMode(true)
  
  UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
  GAME:WaitFrames(30)
  UI:WaitHideTitle(20)
  
  GAME:MoveCamera(180, 172, 1, false)
  
  GAME:FadeIn(20)
  
  GROUND:MoveToPosition(player, 172, 192, false, 2)
  
  SOUND:PlayBGM("", false)
  GROUND:CharSetEmote(player, "exclaim", 1)
  
  UI:SetSpeaker(STRINGS:Format("\\uE040"))
  UI:WaitShowDialogue("Stop right there!")
  
  SOUND:PlayBattleSE("DUN_Aqua_Tail")
  
  local emitter = RogueEssence.Content.SingleEmitter(RogueEssence.Content.AnimData("Aqua_Tail_Splash", 3))
  emitter.LocHeight = 8
  GROUND:PlayVFX(emitter, enemy.Bounds.Center.X, enemy.Bounds.Center.Y)
  
  GROUND:Unhide("Croco")
  
  GAME:WaitFrames(60)
  
  SOUND:PlayBGM("A13. Threat.ogg", false)
  
  UI:SetSpeaker(enemy)
  UI:WaitShowDialogue("I dunno who you are,[pause=30] but yer on my property!")
  UI:WaitShowDialogue("Didn't ya read the sign?")
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("Trespassers[pause=0] get chomped!")
  
  SOUND:PlayBattleSE("EVT_Roar")
  GROUND:CharSetAnim(enemy, "Shoot", false)
  
  GAME:WaitFrames(30)
  
  COMMON.BossTransition()
  
  GAME:CutsceneMode(false)
  
  GAME:ContinueDungeon('large_woods', 1, 0, 0)
  
end


function large_lake.PostBattle()

  local player = CH("PLAYER")
  local enemy = CH("Croco")
  
  GAME:CutsceneMode(true)
  
  GROUND:Unhide("Croco")
  
  GAME:MoveCamera(180, 172, 1, false)
  
  GROUND:TeleportTo(player, 172, 192, Direction.Up)
  
  GAME:FadeIn(20)
  
  UI:SetSpeaker(enemy)
  UI:WaitShowDialogue("Augh, alright I'll hear what you have to say.")
  
  local mon_id = RogueEssence.Dungeon.MonsterID("croconaw", 0, "normal", Gender.Male)
  local recruit = _DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 30, "", 0)
  COMMON.JoinTeamWithFanfare(recruit, from_dungeon)
  
  GAME:FadeOut(false, 20)
  
  GAME:CutsceneMode(false)
  
  SV.large_lake.ReturnVisit = true
  COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, "tutorial_zone", -1, 0, 0)
  
end

function large_lake.EmptyReturn()

  local player = CH("PLAYER")
  local enemy = CH("Croco")
  
  GAME:CutsceneMode(true)
  
  UI:WaitShowTitle(GAME:GetCurrentGround().Name:ToLocal(), 20)
  GAME:WaitFrames(30)
  UI:WaitHideTitle(20)
  
  GAME:MoveCamera(180, 172, 1, false)
  
  GAME:FadeIn(20)
  
  GROUND:MoveToPosition(player, 172, 192, false, 2)
  
  UI:ResetSpeaker(false)
  UI:SetCenter(true)
  UI:WaitShowDialogue("This is appears to be the end of the dungeon.")
  UI:WaitShowDialogue("It's impossible to go any farther.[pause=0] It's time to go back.")
  
  GAME:FadeOut(false, 20)
  
  GAME:CutsceneMode(false)
  
  SV.large_lake.ReturnVisit = true
  COMMON.EndDungeonDay(RogueEssence.Data.GameProgress.ResultType.Cleared, "tutorial_zone", -1, 0, 0)
  
end


---large_lake.Exit(map)
--Engine callback function
function large_lake.Exit(map)


end

---large_lake.Update(map)
--Engine callback function
function large_lake.Update(map)


end

---large_lake.GameSave(map)
--Engine callback function
function large_lake.GameSave(map)


end

---large_lake.GameLoad(map)
--Engine callback function
function large_lake.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------


return large_lake

